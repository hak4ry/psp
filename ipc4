#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#include <time.h>


unsigned long long factorial(int n) {
    if (n == 0 || n == 1) {
        return 1;
    }
    unsigned long long fact = 1;
    for (int i = 2; i <= n; i++) {
        fact *= i;
    }
    return fact;
}

int main() {
    int pipe1[2], pipe2[2];
    pid_t pid;
    int numero;
    unsigned long long resultado;

    if (pipe(pipe1) == -1 || pipe(pipe2) == -1) {
        perror("Error al crear los pipes");
        exit(EXIT_FAILURE);
    }

    
    pid = fork();

    if (pid < 0) {
        perror("Error al hacer fork");
        exit(EXIT_FAILURE);
    }

    if (pid == 0) {  
        close(pipe1[1]);  
        close(pipe2[0]);  

        read(pipe1[0], &numero, sizeof(numero));
        close(pipe1[0]); 
        resultado = factorial(numero);

        write(pipe2[1], &resultado, sizeof(resultado));
        close(pipe2[1]);  
        exit(0); 
    } else { 
        close(pipe1[0]);  
        close(pipe2[1]);  
        srand(time(NULL));  
        numero = rand() % 11;

      
        write(pipe1[1], &numero, sizeof(numero));
        printf("El proceso padre genera el nÃºmero %d en el pipe1\n", numero);
        close(pipe1[1]); 
        wait(NULL);
        read(pipe2[0], &resultado, sizeof(resultado));
        close(pipe2[0]);  
        printf("El factorial calculado por el proceso hijo: %d! = %llu\n", numero, resultado);
    }

    return 0;
}
