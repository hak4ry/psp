#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <time.h>
#include <sys/types.h>  
#include <sys/wait.h>

int main() {
    int pipefd[2];
    pid_t pid;
    char buffer[100];
    time_t t;
    struct tm *tm_info;

    
    if (pipe(pipefd) == -1) {
        perror("Error al crear el pipe");
        exit(EXIT_FAILURE);
    }

    
    pid = fork();

    if (pid < 0) {
    
        perror("Error al hacer fork");
        exit(EXIT_FAILURE);
    }

    if (pid > 0) {
        
        close(pipefd[0]);  
        t = time(NULL);
        tm_info = localtime(&t);
        strftime(buffer, 100, "Fecha y hora: %Y-%m-%d %H:%M:%S\n", tm_info);

       
        write(pipefd[1], buffer, strlen(buffer) + 1);
        close(pipefd[1]);  
        wait(NULL);
    } else {
        close(pipefd[1]); 
        read(pipefd[0], buffer, sizeof(buffer));
        close(pipefd[0]);  
        printf("Proceso hijo recibi√≥: %s", buffer);
    }

    return 0;
}
